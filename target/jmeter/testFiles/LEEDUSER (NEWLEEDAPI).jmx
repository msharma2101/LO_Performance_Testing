<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="LEEDOnline" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Length</stringProp>
            <stringProp name="Header.value">8000</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip,deflate </stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="partner_alias_new" elementType="Argument">
            <stringProp name="Argument.name">partner_alias_new</stringProp>
            <stringProp name="Argument.value">leedbapiuser</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="partner_password_new" elementType="Argument">
            <stringProp name="Argument.name">partner_password_new</stringProp>
            <stringProp name="Argument.value">leedbapiuser</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="partner_alias" elementType="Argument">
            <stringProp name="Argument.name">partner_alias</stringProp>
            <stringProp name="Argument.value">NEWLEEDAPI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="partner_password" elementType="Argument">
            <stringProp name="Argument.name">partner_password</stringProp>
            <stringProp name="Argument.value">NewLeed@Api</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="THREAD_COUNT" elementType="Argument">
            <stringProp name="Argument.name">THREAD_COUNT</stringProp>
            <stringProp name="Argument.value">${__P(threadCount, 25)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOOP_COUNT" elementType="Argument">
            <stringProp name="Argument.name">LOOP_COUNT</stringProp>
            <stringProp name="Argument.value">${__P(loopCount, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RAMP_UP" elementType="Argument">
            <stringProp name="Argument.name">RAMP_UP</stringProp>
            <stringProp name="Argument.value">${__P(rampUp, 30)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="IsoNo" elementType="Argument">
            <stringProp name="Argument.name">IsoNo</stringProp>
            <stringProp name="Argument.value">10393220</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="LEEDUSER (NEWLEEDAPI)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LOOP_COUNT}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREAD_COUNT}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <longProp name="ThreadGroup.start_time">1523435046000</longProp>
        <longProp name="ThreadGroup.end_time">1523435046000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">16</intProp>
        </ResponseAssertion>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Project" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; &#xd;
xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:createProject&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjAddressData&gt;&#xd;
        &lt;Standardaddress/&gt;&#xd;
        &lt;COName/&gt;&#xd;
        &lt;City&gt;New York&lt;/City&gt;&#xd;
        &lt;District/&gt;&#xd;
        &lt;Regiogroup/&gt;&#xd;
        &lt;PostlCod1&gt;12345&lt;/PostlCod1&gt;&#xd;
        &lt;PostlCod2/&gt;&#xd;
        &lt;PostlCod3/&gt;&#xd;
        &lt;Pcode1Ext/&gt;&#xd;
        &lt;Pcode2Ext/&gt;&#xd;
        &lt;Pcode3Ext/&gt;&#xd;
        &lt;PoBox/&gt;&#xd;
        &lt;PoWONo/&gt;&#xd;
        &lt;PoBoxCit/&gt;&#xd;
        &lt;PoBoxReg/&gt;&#xd;
        &lt;PoboxCtry/&gt;&#xd;
        &lt;PoCtryiso/&gt;&#xd;
        &lt;Street&gt;test&lt;/Street&gt;&#xd;
        &lt;StrAbbr/&gt;&#xd;
        &lt;HouseNo/&gt;&#xd;
        &lt;HouseNo2/&gt;&#xd;
        &lt;HouseNo3/&gt;&#xd;
        &lt;StrSuppl1/&gt;&#xd;
        &lt;StrSuppl2/&gt;&#xd;
        &lt;StrSuppl3&gt;test&lt;/StrSuppl3&gt;&#xd;
        &lt;Location/&gt;&#xd;
        &lt;Building/&gt;&#xd;
        &lt;Floor/&gt;&#xd;
        &lt;RoomNo/&gt;&#xd;
        &lt;Country&gt;US&lt;/Country&gt;&#xd;
        &lt;Countryiso/&gt;&#xd;
        &lt;Region&gt;NY &lt;/Region&gt;&#xd;
        &lt;TimeZone/&gt;&#xd;
        &lt;Taxjurcode/&gt;&#xd;
        &lt;HomeCity/&gt;&#xd;
        &lt;Transpzone/&gt;&#xd;
        &lt;Langu/&gt;&#xd;
        &lt;Languiso/&gt;&#xd;
        &lt;CommType/&gt;&#xd;
        &lt;Extaddressnumber/&gt;&#xd;
        &lt;DontUseP/&gt;&#xd;
        &lt;DontUseS/&gt;&#xd;
        &lt;MoveDate/&gt;&#xd;
        &lt;MoveAddress/&gt;&#xd;
        &lt;Validfromdate/&gt;&#xd;
        &lt;Validtodate/&gt;&#xd;
        &lt;MoveAddrGuid/&gt;&#xd;
        &lt;CityNo/&gt;&#xd;
        &lt;DistrctNo/&gt;&#xd;
        &lt;Chckstatus/&gt;&#xd;
        &lt;PboxcitNo/&gt;&#xd;
        &lt;StreetNo/&gt;&#xd;
        &lt;Homecityno/&gt;&#xd;
      &lt;/IProjAddressData&gt;&#xd;
      &lt;IProjOwnerAddr&gt;&#xd;
        &lt;Addresstype/&gt;&#xd;
        &lt;Standardaddressusage/&gt;&#xd;
        &lt;Usagevalidfrom/&gt;&#xd;
        &lt;Usagevalidto/&gt;&#xd;
        &lt;Validtoreadforchange/&gt;&#xd;
        &lt;Standardaddress/&gt;&#xd;
        &lt;COName&gt;testuser&lt;/COName&gt;&#xd;
        &lt;City/&gt;&#xd;
        &lt;District&gt;Government Use: Local, Public Housi&lt;/District&gt;&#xd;
        &lt;Regiogroup/&gt;&#xd;
        &lt;PostlCod1/&gt;&#xd;
        &lt;PostlCod2/&gt;&#xd;
        &lt;PostlCod3/&gt;&#xd;
        &lt;Pcode1Ext/&gt;&#xd;
        &lt;Pcode2Ext/&gt;&#xd;
        &lt;Pcode3Ext/&gt;&#xd;
        &lt;PoBox/&gt;&#xd;
        &lt;PoWONo/&gt;&#xd;
        &lt;PoBoxCit/&gt;&#xd;
        &lt;PoBoxReg/&gt;&#xd;
        &lt;PoboxCtry/&gt;&#xd;
        &lt;PoCtryiso/&gt;&#xd;
        &lt;Street/&gt;&#xd;
        &lt;StrAbbr/&gt;&#xd;
        &lt;HouseNo/&gt;&#xd;
        &lt;HouseNo2/&gt;&#xd;
        &lt;HouseNo3/&gt;&#xd;
        &lt;StrSuppl1&gt;MKB Construction, Inc.&lt;/StrSuppl1&gt;&#xd;
        &lt;StrSuppl2/&gt;&#xd;
        &lt;StrSuppl3/&gt;&#xd;
        &lt;Location/&gt;&#xd;
        &lt;Building/&gt;&#xd;
        &lt;Floor/&gt;&#xd;
        &lt;RoomNo/&gt;&#xd;
        &lt;Country&gt;US&lt;/Country&gt;&#xd;
        &lt;Countryiso/&gt;&#xd;
        &lt;Region/&gt;&#xd;
        &lt;TimeZone/&gt;&#xd;
        &lt;Taxjurcode/&gt;&#xd;
        &lt;HomeCity/&gt;&#xd;
        &lt;Transpzone/&gt;&#xd;
        &lt;Langu/&gt;&#xd;
        &lt;Languiso/&gt;&#xd;
        &lt;CommType/&gt;&#xd;
        &lt;Extaddressnumber/&gt;&#xd;
        &lt;DontUseP/&gt;&#xd;
        &lt;DontUseS/&gt;&#xd;
        &lt;MoveDate/&gt;&#xd;
        &lt;MoveAddress/&gt;&#xd;
        &lt;Validfromdate/&gt;&#xd;
        &lt;Validtodate/&gt;&#xd;
        &lt;MoveAddrGuid/&gt;&#xd;
        &lt;CityNo/&gt;&#xd;
        &lt;DistrctNo/&gt;&#xd;
        &lt;Chckstatus/&gt;&#xd;
        &lt;PboxcitNo/&gt;&#xd;
        &lt;StreetNo/&gt;&#xd;
        &lt;Homecityno/&gt;&#xd;
        &lt;Telephone/&gt;&#xd;
        &lt;Fax/&gt;&#xd;
        &lt;EMail&gt;testuser@gmail.com&lt;/EMail&gt;&#xd;
        &lt;Uri/&gt;&#xd;
      &lt;/IProjOwnerAddr&gt;&#xd;
      &lt;IProjRatingsystem&gt;LEED V4 BD+C: NC&lt;/IProjRatingsystem&gt;&#xd;
      &lt;IProjType&gt;ONEOFF&lt;/IProjType&gt;&#xd;
      &lt;IProjectTitle&gt;Test XHR&lt;/IProjectTitle&gt;&#xd;
      &lt;ITermsAndCondAcceptOrRej&gt;ACCEPT&lt;/ITermsAndCondAcceptOrRej&gt;&#xd;
      &lt;ITermsAndCondFileContent&gt;&lt;/ITermsAndCondFileContent&gt;&#xd;
      &lt;ITermsAndCondFileName&gt;20131104_Certification_Agreement.pdf&lt;/ITermsAndCondFileName&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItAdditionalData&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;03&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;01&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;No&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;03&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;39&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;36.188880&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;03&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;40&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;-115.166930&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;03&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;51&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;2018-04-04&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;03&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;52&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;2018-04-21&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;03&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;22&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;1500&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;03&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;43&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;Airport: Terminal/Concourse&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;23&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;37&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;IP&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;03&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;60&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;0&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;23&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;15&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;No&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;23&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;16&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT/&gt;&#xd;
        &lt;/item&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ADDTYPE&gt;23&lt;/ADDTYPE&gt;&#xd;
          &lt;DATA_TYPE&gt;40&lt;/DATA_TYPE&gt;&#xd;
          &lt;CUSTOMIZING_FIELD/&gt;&#xd;
          &lt;TEXT&gt;No&lt;/TEXT&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItAdditionalData&gt;&#xd;
      &lt;ItAddress&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;Addresstype&gt;0024&lt;/Addresstype&gt;&#xd;
          &lt;Standardaddressusage/&gt;&#xd;
          &lt;Usagevalidfrom/&gt;&#xd;
          &lt;Usagevalidto/&gt;&#xd;
          &lt;Validtoreadforchange/&gt;&#xd;
          &lt;Standardaddress/&gt;&#xd;
          &lt;COName&gt;MKB Construction, Inc.&lt;/COName&gt;&#xd;
          &lt;City/&gt;&#xd;
          &lt;District&gt;Government Use: Local, Public Housi&lt;/District&gt;&#xd;
          &lt;Regiogroup/&gt;&#xd;
          &lt;PostlCod1/&gt;&#xd;
          &lt;PostlCod2/&gt;&#xd;
          &lt;PostlCod3/&gt;&#xd;
          &lt;Pcode1Ext/&gt;&#xd;
          &lt;Pcode2Ext/&gt;&#xd;
          &lt;Pcode3Ext/&gt;&#xd;
          &lt;PoBox/&gt;&#xd;
          &lt;PoWONo/&gt;&#xd;
          &lt;PoBoxCit/&gt;&#xd;
          &lt;PoBoxReg/&gt;&#xd;
          &lt;PoboxCtry/&gt;&#xd;
          &lt;PoCtryiso/&gt;&#xd;
          &lt;Street/&gt;&#xd;
          &lt;StrAbbr/&gt;&#xd;
          &lt;HouseNo/&gt;&#xd;
          &lt;HouseNo2/&gt;&#xd;
          &lt;HouseNo3/&gt;&#xd;
          &lt;StrSuppl1/&gt;&#xd;
          &lt;StrSuppl2/&gt;&#xd;
          &lt;StrSuppl3/&gt;&#xd;
          &lt;Location&gt;No&lt;/Location&gt;&#xd;
          &lt;Building/&gt;&#xd;
          &lt;Floor/&gt;&#xd;
          &lt;RoomNo/&gt;&#xd;
          &lt;Country&gt;US&lt;/Country&gt;&#xd;
          &lt;Countryiso/&gt;&#xd;
          &lt;Region/&gt;&#xd;
          &lt;TimeZone/&gt;&#xd;
          &lt;Taxjurcode/&gt;&#xd;
          &lt;HomeCity/&gt;&#xd;
          &lt;Transpzone/&gt;&#xd;
          &lt;Langu/&gt;&#xd;
          &lt;Languiso/&gt;&#xd;
          &lt;CommType/&gt;&#xd;
          &lt;Extaddressnumber/&gt;&#xd;
          &lt;DontUseP/&gt;&#xd;
          &lt;DontUseS/&gt;&#xd;
          &lt;MoveDate/&gt;&#xd;
          &lt;MoveAddress/&gt;&#xd;
          &lt;Validfromdate/&gt;&#xd;
          &lt;Validtodate/&gt;&#xd;
          &lt;MoveAddrGuid/&gt;&#xd;
          &lt;CityNo/&gt;&#xd;
          &lt;DistrctNo/&gt;&#xd;
          &lt;Chckstatus/&gt;&#xd;
          &lt;PboxcitNo/&gt;&#xd;
          &lt;StreetNo/&gt;&#xd;
          &lt;Homecityno/&gt;&#xd;
          &lt;Telephone/&gt;&#xd;
          &lt;Fax/&gt;&#xd;
          &lt;EMail/&gt;&#xd;
          &lt;Uri/&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItAddress&gt;&#xd;
    &lt;/ns1:createProject&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_adm_wse/110/z_ws_adm_wse/z_ws_adm_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
            <stringProp name="XPathExtractor.default">Not Found</stringProp>
            <stringProp name="XPathExtractor.refname">ProjectId</stringProp>
            <stringProp name="XPathExtractor.matchNumber">1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//EProjectId/text()</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Text Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-257090285">&lt;EProjectId&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Project Payment" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:submitOrderPayment&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;IBillingAddress&gt;&#xd;
        &lt;Standardaddress/&gt;&#xd;
        &lt;COName&gt;sri malladi&lt;/COName&gt;&#xd;
        &lt;City&gt;Durham&lt;/City&gt;&#xd;
        &lt;District/&gt;&#xd;
        &lt;Regiogroup/&gt;&#xd;
        &lt;PostlCod1&gt;35006&lt;/PostlCod1&gt;&#xd;
        &lt;PostlCod2/&gt;&#xd;
        &lt;PostlCod3/&gt;&#xd;
        &lt;Pcode1Ext/&gt;&#xd;
        &lt;Pcode2Ext/&gt;&#xd;
        &lt;Pcode3Ext/&gt;&#xd;
        &lt;PoBox/&gt;&#xd;
        &lt;PoWONo/&gt;&#xd;
        &lt;PoBoxCit/&gt;&#xd;
        &lt;PoBoxReg/&gt;&#xd;
        &lt;PoboxCtry/&gt;&#xd;
        &lt;PoCtryiso/&gt;&#xd;
        &lt;Street&gt;23 Houston Street&lt;/Street&gt;&#xd;
        &lt;StrAbbr/&gt;&#xd;
        &lt;HouseNo/&gt;&#xd;
        &lt;HouseNo2/&gt;&#xd;
        &lt;HouseNo3/&gt;&#xd;
        &lt;StrSuppl1/&gt;&#xd;
        &lt;StrSuppl2/&gt;&#xd;
        &lt;StrSuppl3&gt;test&lt;/StrSuppl3&gt;&#xd;
        &lt;Location/&gt;&#xd;
        &lt;Building/&gt;&#xd;
        &lt;Floor/&gt;&#xd;
        &lt;RoomNo/&gt;&#xd;
        &lt;Country&gt;US&lt;/Country&gt;&#xd;
        &lt;Countryiso/&gt;&#xd;
        &lt;Region&gt;NC &lt;/Region&gt;&#xd;
        &lt;TimeZone/&gt;&#xd;
        &lt;Taxjurcode/&gt;&#xd;
        &lt;HomeCity/&gt;&#xd;
        &lt;Transpzone/&gt;&#xd;
        &lt;Langu/&gt;&#xd;
        &lt;Languiso/&gt;&#xd;
        &lt;CommType/&gt;&#xd;
        &lt;Extaddressnumber/&gt;&#xd;
        &lt;DontUseP/&gt;&#xd;
        &lt;DontUseS/&gt;&#xd;
        &lt;MoveDate/&gt;&#xd;
        &lt;MoveAddress/&gt;&#xd;
        &lt;Validfromdate/&gt;&#xd;
        &lt;Validtodate/&gt;&#xd;
        &lt;MoveAddrGuid/&gt;&#xd;
        &lt;CityNo/&gt;&#xd;
        &lt;DistrctNo/&gt;&#xd;
        &lt;Chckstatus/&gt;&#xd;
        &lt;PboxcitNo/&gt;&#xd;
        &lt;StreetNo/&gt;&#xd;
        &lt;Homecityno/&gt;&#xd;
      &lt;/IBillingAddress&gt;&#xd;
      &lt;IBillingEmail&gt;srimalladidev@usgbc.org&lt;/IBillingEmail&gt;&#xd;
      &lt;ICreditCardInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjRegistrationFlag&gt;X&lt;/IProjRegistrationFlag&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IPromoCode/&gt;&#xd;
      &lt;IReviewOrAppealFlag/&gt;&#xd;
      &lt;ITaxExempt/&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItSalesorderItem&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ProjectId&gt;${ProjectId}&lt;/ProjectId&gt;&#xd;
          &lt;Material&gt;000000000000002121&lt;/Material&gt;&#xd;
          &lt;MaterialDesc&gt;LEED-NC Registration&lt;/MaterialDesc&gt;&#xd;
          &lt;Quantity&gt;1.0&lt;/Quantity&gt;&#xd;
          &lt;UnitPrice&gt;1500.0&lt;/UnitPrice&gt;&#xd;
          &lt;BillingDate/&gt;&#xd;
          &lt;MatPriceGrp/&gt;&#xd;
          &lt;WbsElement/&gt;&#xd;
          &lt;CompanyCode&gt;BP02&lt;/CompanyCode&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItSalesorderItem&gt;&#xd;
    &lt;/ns1:submitOrderPayment&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_pmn_wse/110/z_ws_pmn_wse/z_ws_pmn_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Text Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1172546084">ESalesDocumentNum</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ZProjectOrderDetails" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:ZProjectOrderDetails&gt;&#xd;
      &lt;ItItems/&gt;&#xd;
      &lt;ItOrders/&gt;&#xd;
      &lt;ItReturn/&gt;&#xd;
      &lt;Projectbp&gt;${ProjectId}&lt;/Projectbp&gt;&#xd;
    &lt;/ns1:ZProjectOrderDetails&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/zprojectorderdetails/110/zprojectorderdetails/zprojectorderdetails</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="82442843">Vbeln</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
            <stringProp name="XPathExtractor.default">Not Found</stringProp>
            <stringProp name="XPathExtractor.refname">IsoNo</stringProp>
            <stringProp name="XPathExtractor.matchNumber">1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">(//Vbeln/text())[1]</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectClarificationList" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectClarificationList&gt;&#xd;
      &lt;EtClarificationList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;leedbapiuser&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectClarificationList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectCertificationDetails" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectCertificationDetails&gt;&#xd;
      &lt;EtCertifiedinfo/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;1000142237&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectCertificationDetails&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1673982251">ERatingSys</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectTimelineOptions" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectTimelineOptions&gt;&#xd;
      &lt;EtCurrentTimelineOption/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtPossibleTimelineOption/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectTimelineOptions&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_adm_wse/110/z_ws_adm_wse/z_ws_adm_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="954289721">&lt;RvwDescription&gt;</stringProp>
              <stringProp name="-1628561748">&lt;EtPossibleTimelineOption&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateProject" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
     &lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;urn:updateProject&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;EtErrorLogInfo&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;item&gt;&#xd;
               &lt;Mandt&gt;&lt;/Mandt&gt;&#xd;
               &lt;FmName&gt;&lt;/FmName&gt;&#xd;
               &lt;Crdat&gt;&lt;/Crdat&gt;&#xd;
               &lt;Crtim&gt;&lt;/Crtim&gt;&#xd;
               &lt;ProjId&gt;&lt;/ProjId&gt;&#xd;
               &lt;UserAlias&gt;&lt;/UserAlias&gt;&#xd;
               &lt;Type&gt;&lt;/Type&gt;&#xd;
               &lt;Id&gt;&lt;/Id&gt;&#xd;
               &lt;MsgNo&gt;&lt;/MsgNo&gt;&#xd;
               &lt;MsgText&gt;&lt;/MsgText&gt;&#xd;
            &lt;/item&gt;&#xd;
         &lt;/EtErrorLogInfo&gt;&#xd;
         &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
         &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
         &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
         &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
         &lt;IProjectTitle&gt;Test Project Update 0619&lt;/IProjectTitle&gt;&#xd;
         &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;IUserPwd&gt;&lt;/IUserPwd&gt;&#xd;
      &lt;/urn:updateProject&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_adm_wse/110/z_ws_adm_wse/z_ws_adm_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-362518439">EUserGuid</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectListBySel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectListBySel&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtProjectList/&gt;&#xd;
      &lt;EtSavedProjects/&gt;&#xd;
      &lt;IFlagArchive/&gt;&#xd;
      &lt;IFlagPrjtype&gt;OGB&lt;/IFlagPrjtype&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectListBySel&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cmp_wse/110/z_ws_cmp_wse/z_ws_cmp_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-362518439">EUserGuid</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectAddresses" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectAddresses&gt;&#xd;
      &lt;EtAddresses/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectAddresses&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_adm_wse/110/z_ws_adm_wse/z_ws_adm_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2122189715">EtAddresses</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectDetails" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectDetails&gt;&#xd;
      &lt;EtAdditionalData/&gt;&#xd;
      &lt;EtAdminTeam/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtFaxInfo/&gt;&#xd;
      &lt;EtTelephoneInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectDetails&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_adm_wse/110/z_ws_adm_wse/z_ws_adm_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="160394061">ECentraldataorganization</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddProjectTeamMember" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:addProjectTeamMember&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItUserAlias&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;Useralias&gt;testuser1@gmail.com&lt;/Useralias&gt;&#xd;
          &lt;Projbp&gt;${ProjectId}&lt;/Projbp&gt;&#xd;
          &lt;Reltyp&gt;ZRPO04&lt;/Reltyp&gt;&#xd;
          &lt;Responsibility/&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItUserAlias&gt;&#xd;
    &lt;/ns1:addProjectTeamMember&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1949863611">Useralias</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectTeamInfo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectTeamInfo&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtTeamMembers/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectTeamInfo&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="107578285">EtTeamMembers</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RemoveProjectTeamMember" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:removeProjectTeamMember&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItUserAlias&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;Useralias&gt;testuser1@gmail.com&lt;/Useralias&gt;&#xd;
          &lt;Projbp&gt;${ProjectId}&lt;/Projbp&gt;&#xd;
          &lt;Reltyp&gt;ZRPO04&lt;/Reltyp&gt;&#xd;
          &lt;Responsibility/&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItUserAlias&gt;&#xd;
    &lt;/ns1:removeProjectTeamMember&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1333609414">ItUserAlias</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ReactivateProjectTeamMember" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:reactivateProjectTeamMember&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItUserAlias&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;Useralias&gt;testuser1@gmail.com&lt;/Useralias&gt;&#xd;
          &lt;Projbp&gt;${ProjectId}&lt;/Projbp&gt;&#xd;
          &lt;Reltyp&gt;ZRPO04&lt;/Reltyp&gt;&#xd;
          &lt;Responsibility/&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItUserAlias&gt;&#xd;
    &lt;/ns1:reactivateProjectTeamMember&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cmp_wse/110/z_ws_cmp_wse/z_ws_cmp_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1333609414">ItUserAlias</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ChangeProjectTeam " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:changeProjectTeam&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItUserAlias&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;Useralias&gt;srimalladidev@usgbc.org&lt;/Useralias&gt;&#xd;
          &lt;Projbp&gt;${ProjectId}&lt;/Projbp&gt;&#xd;
          &lt;Reltyp&gt;ZRPO34&lt;/Reltyp&gt;&#xd;
          &lt;Responsibility&gt;Project Manager&lt;/Responsibility&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItUserAlias&gt;&#xd;
    &lt;/ns1:changeProjectTeam&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1333609414">ItUserAlias</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ChangeAdmin" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:changeAdmin&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;IAdminToBeAlias&gt;testuser1@gmail.com&lt;/IAdminToBeAlias&gt;&#xd;
      &lt;IAdminType&gt;PRJ&lt;/IAdminType&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IResponsibility&gt;Owner &amp;amp; Master Developer&lt;/IResponsibility&gt;&#xd;
      &lt;ITbu1/&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;TTbu2/&gt;&#xd;
    &lt;/ns1:changeAdmin&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-362518439">EUserGuid</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ValidateProjInfo" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:validateProjInfo&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectInfo&gt;&#xd;
        &lt;CampusId/&gt;&#xd;
        &lt;CampusTitle/&gt;&#xd;
        &lt;MastersiteId/&gt;&#xd;
        &lt;MastersiteTitle/&gt;&#xd;
        &lt;RatingSystem/&gt;&#xd;
        &lt;ProjectTitle/&gt;&#xd;
        &lt;ProjregType/&gt;&#xd;
        &lt;GroupCertificatn/&gt;&#xd;
        &lt;WorkBasicScope/&gt;&#xd;
        &lt;GrossProjSqft/&gt;&#xd;
        &lt;NumOfBuildings/&gt;&#xd;
        &lt;CstrctStartDate/&gt;&#xd;
        &lt;CstrctEndDate/&gt;&#xd;
        &lt;Address1/&gt;&#xd;
        &lt;Address2/&gt;&#xd;
        &lt;City/&gt;&#xd;
        &lt;County/&gt;&#xd;
        &lt;State&gt;NC &lt;/State&gt;&#xd;
        &lt;Country&gt;US&lt;/Country&gt;&#xd;
        &lt;ZipCode&gt;90001&lt;/ZipCode&gt;&#xd;
        &lt;Lattitude/&gt;&#xd;
        &lt;Longitude/&gt;&#xd;
        &lt;ProjConfidential/&gt;&#xd;
        &lt;ProjType/&gt;&#xd;
        &lt;SchoolDistrict/&gt;&#xd;
        &lt;AntiCertLevel/&gt;&#xd;
        &lt;ProjNotifyChapter/&gt;&#xd;
        &lt;RcvNatnlMemberinfo/&gt;&#xd;
        &lt;SameAsCmpsOwner/&gt;&#xd;
        &lt;NumOfProjOwners/&gt;&#xd;
        &lt;PublishOwnerInfo/&gt;&#xd;
        &lt;ProjAdminFname/&gt;&#xd;
        &lt;ProjAdminLname/&gt;&#xd;
        &lt;ProjAdminEmail/&gt;&#xd;
        &lt;PjownerFirstName/&gt;&#xd;
        &lt;PjownerLastName/&gt;&#xd;
        &lt;PjownerAddrl1/&gt;&#xd;
        &lt;PjownerAddrl2/&gt;&#xd;
        &lt;PjownerCity/&gt;&#xd;
        &lt;PjownerState/&gt;&#xd;
        &lt;PjownerCountry/&gt;&#xd;
        &lt;PjownerZipcode/&gt;&#xd;
        &lt;PjownerPhone/&gt;&#xd;
        &lt;PjownerEmail/&gt;&#xd;
        &lt;PjownerOrg/&gt;&#xd;
        &lt;PjownerType/&gt;&#xd;
        &lt;PjownerWebsite/&gt;&#xd;
        &lt;PrimcontSalutn/&gt;&#xd;
        &lt;PrimcontName/&gt;&#xd;
        &lt;PrimcontEmail/&gt;&#xd;
        &lt;PrimcontPhone/&gt;&#xd;
        &lt;PrimcontAddrl1/&gt;&#xd;
        &lt;PrimcontAddrl2/&gt;&#xd;
        &lt;PrimcontCity/&gt;&#xd;
        &lt;PrimcontState/&gt;&#xd;
        &lt;PrimcontCountry/&gt;&#xd;
        &lt;PrimcontZip/&gt;&#xd;
        &lt;PrimcontFax/&gt;&#xd;
        &lt;PrimcontJobTitle/&gt;&#xd;
        &lt;PrimcontOrg/&gt;&#xd;
        &lt;ProjectBp/&gt;&#xd;
        &lt;AccessId/&gt;&#xd;
        &lt;IsLov2Recert/&gt;&#xd;
        &lt;PrevCertAccessid/&gt;&#xd;
        &lt;PrevCertProjid/&gt;&#xd;
        &lt;PrevCertProjtitle/&gt;&#xd;
        &lt;PrevCertProjrs/&gt;&#xd;
        &lt;SpIpunits/&gt;&#xd;
      &lt;/IProjectInfo&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;IValidationFlag&gt;001&lt;/IValidationFlag&gt;&#xd;
    &lt;/ns1:validateProjInfo&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cmp_wse/110/z_ws_cmp_wse/z_ws_cmp_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-362518439">EUserGuid</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetPrice" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getPrice&gt;&#xd;
      &lt;EtFmErrorLogInfo/&gt;&#xd;
      &lt;EtSalesItem/&gt;&#xd;
      &lt;EtSalesorderItem/&gt;&#xd;
      &lt;IBillingAddress&gt;&#xd;
        &lt;Standardaddress/&gt;&#xd;
        &lt;COName&gt;sri malladi&lt;/COName&gt;&#xd;
        &lt;City&gt;Durham&lt;/City&gt;&#xd;
        &lt;District/&gt;&#xd;
        &lt;Regiogroup/&gt;&#xd;
        &lt;PostlCod1/&gt;&#xd;
        &lt;PostlCod2/&gt;&#xd;
        &lt;PostlCod3/&gt;&#xd;
        &lt;Pcode1Ext/&gt;&#xd;
        &lt;Pcode2Ext/&gt;&#xd;
        &lt;Pcode3Ext/&gt;&#xd;
        &lt;PoBox/&gt;&#xd;
        &lt;PoWONo/&gt;&#xd;
        &lt;PoBoxCit/&gt;&#xd;
        &lt;PoBoxReg/&gt;&#xd;
        &lt;PoboxCtry/&gt;&#xd;
        &lt;PoCtryiso/&gt;&#xd;
        &lt;Street&gt;23 Houston Street&lt;/Street&gt;&#xd;
        &lt;StrAbbr/&gt;&#xd;
        &lt;HouseNo/&gt;&#xd;
        &lt;HouseNo2/&gt;&#xd;
        &lt;HouseNo3/&gt;&#xd;
        &lt;StrSuppl1/&gt;&#xd;
        &lt;StrSuppl2/&gt;&#xd;
        &lt;StrSuppl3/&gt;&#xd;
        &lt;Location/&gt;&#xd;
        &lt;Building/&gt;&#xd;
        &lt;Floor/&gt;&#xd;
        &lt;RoomNo/&gt;&#xd;
        &lt;Country&gt;US&lt;/Country&gt;&#xd;
        &lt;Countryiso/&gt;&#xd;
        &lt;Region&gt;NC&lt;/Region&gt;&#xd;
        &lt;TimeZone/&gt;&#xd;
        &lt;Taxjurcode/&gt;&#xd;
        &lt;HomeCity/&gt;&#xd;
        &lt;Transpzone/&gt;&#xd;
        &lt;Langu/&gt;&#xd;
        &lt;Languiso/&gt;&#xd;
        &lt;CommType/&gt;&#xd;
        &lt;Extaddressnumber/&gt;&#xd;
        &lt;DontUseP/&gt;&#xd;
        &lt;DontUseS/&gt;&#xd;
        &lt;MoveDate/&gt;&#xd;
        &lt;MoveAddress/&gt;&#xd;
        &lt;Validfromdate/&gt;&#xd;
        &lt;Validtodate/&gt;&#xd;
        &lt;MoveAddrGuid/&gt;&#xd;
        &lt;CityNo/&gt;&#xd;
        &lt;DistrctNo/&gt;&#xd;
        &lt;Chckstatus/&gt;&#xd;
        &lt;PboxcitNo/&gt;&#xd;
        &lt;StreetNo/&gt;&#xd;
        &lt;Homecityno/&gt;&#xd;
      &lt;/IBillingAddress&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;INumBundles/&gt;&#xd;
      &lt;INumCreditApproach/&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjRegistrationFlag&gt;X&lt;/IProjRegistrationFlag&gt;&#xd;
      &lt;IProjSqfeet/&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IPromoCode/&gt;&#xd;
      &lt;ITaxExempt/&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItPricingItems&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;ProjectId&gt;${ProjectId}&lt;/ProjectId&gt;&#xd;
          &lt;RvwElementId/&gt;&#xd;
          &lt;CreditId/&gt;&#xd;
          &lt;GrossProjSqft/&gt;&#xd;
          &lt;GroupCertificatn/&gt;&#xd;
          &lt;CreditType/&gt;&#xd;
          &lt;SpecialItemFlag/&gt;&#xd;
          &lt;Quantity&gt;1&lt;/Quantity&gt;&#xd;
          &lt;Promocode/&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItPricingItems&gt;&#xd;
    &lt;/ns1:getPrice&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_pmn_wse/110/z_ws_pmn_wse/z_ws_pmn_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1163878960">EtSalesItem</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectTeamRoles" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectTeamRoles&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtPrjroles/&gt;&#xd;
      &lt;EtStdroles/&gt;&#xd;
      &lt;EtZstrRole/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectTeamRoles&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1581341801">EtStdroles</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectTimelineSummary" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectTimelineSummary&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtTimelineSummary/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;1000142237&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectTimelineSummary&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1331947788">&lt;DisplayFlag&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ChangeProjectTimeline" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:changeProjectTimeline&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;1000142295&lt;/IProjectId&gt;&#xd;
      &lt;ITimelineOption&gt;TNC7O1&lt;/ITimelineOption&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:changeProjectTimeline&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="283420113">&lt;EApplyTimelineOpt&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetUserDetails" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getUserDetails&gt;&#xd;
      &lt;EtAdditionalData/&gt;&#xd;
      &lt;EtApDocList/&gt;&#xd;
      &lt;EtBapiadtlx/&gt;&#xd;
      &lt;EtBapiadttx/&gt;&#xd;
      &lt;EtEmailData/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtFaxData/&gt;&#xd;
      &lt;EtLicenceDetails/&gt;&#xd;
      &lt;EtTelephoneData/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getUserDetails&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_adm_wse/110/z_ws_adm_wse/z_ws_adm_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="607824921">EAddressdata</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCampusList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getCampusList&gt;&#xd;
      &lt;EtActiveOrArchiveList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtSaveForLaterList/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getCampusList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cmp_wse/110/z_ws_cmp_wse/z_ws_cmp_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-630467608">EtActiveOrArchiveList</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCampusProjectList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getCampusProjectList&gt;&#xd;
      &lt;EtActiveOrArchiveList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ICampusId&gt;1000136985&lt;/ICampusId&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IMasterSiteId&gt;1000137926&lt;/IMasterSiteId&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getCampusProjectList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cmp_wse/110/z_ws_cmp_wse/z_ws_cmp_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1393903715">ProjadminName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetMasterList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getMasterList&gt;&#xd;
      &lt;EtActiveOrArchiveList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtSaveForLaterList/&gt;&#xd;
      &lt;ICampusId&gt;1000136985&lt;/ICampusId&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getMasterList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cmp_wse/110/z_ws_cmp_wse/z_ws_cmp_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1393903715">ProjadminName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PaymentPreInvSubmitpay" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:paymentPreInvSubmitpay&gt;&#xd;
      &lt;EtFmErrorLogInfo/&gt;&#xd;
      &lt;EtSalesorders/&gt;&#xd;
      &lt;IBillingAddress&gt;&#xd;
        &lt;Standardaddress/&gt;&#xd;
        &lt;COName&gt;sri malladi&lt;/COName&gt;&#xd;
        &lt;City&gt;Durham&lt;/City&gt;&#xd;
        &lt;District/&gt;&#xd;
        &lt;Regiogroup/&gt;&#xd;
        &lt;PostlCod1&gt;90001&lt;/PostlCod1&gt;&#xd;
        &lt;PostlCod2/&gt;&#xd;
        &lt;PostlCod3/&gt;&#xd;
        &lt;Pcode1Ext/&gt;&#xd;
        &lt;Pcode2Ext/&gt;&#xd;
        &lt;Pcode3Ext/&gt;&#xd;
        &lt;PoBox/&gt;&#xd;
        &lt;PoWONo/&gt;&#xd;
        &lt;PoBoxCit/&gt;&#xd;
        &lt;PoBoxReg/&gt;&#xd;
        &lt;PoboxCtry/&gt;&#xd;
        &lt;PoCtryiso/&gt;&#xd;
        &lt;Street&gt;23 Houston Street&lt;/Street&gt;&#xd;
        &lt;StrAbbr/&gt;&#xd;
        &lt;HouseNo/&gt;&#xd;
        &lt;HouseNo2/&gt;&#xd;
        &lt;HouseNo3/&gt;&#xd;
        &lt;StrSuppl1/&gt;&#xd;
        &lt;StrSuppl2/&gt;&#xd;
        &lt;StrSuppl3/&gt;&#xd;
        &lt;Location/&gt;&#xd;
        &lt;Building/&gt;&#xd;
        &lt;Floor/&gt;&#xd;
        &lt;RoomNo/&gt;&#xd;
        &lt;Country&gt;US&lt;/Country&gt;&#xd;
        &lt;Countryiso/&gt;&#xd;
        &lt;Region&gt;NC &lt;/Region&gt;&#xd;
        &lt;TimeZone/&gt;&#xd;
        &lt;Taxjurcode/&gt;&#xd;
        &lt;HomeCity/&gt;&#xd;
        &lt;Transpzone/&gt;&#xd;
        &lt;Langu/&gt;&#xd;
        &lt;Languiso/&gt;&#xd;
        &lt;CommType/&gt;&#xd;
        &lt;Extaddressnumber/&gt;&#xd;
        &lt;DontUseP/&gt;&#xd;
        &lt;DontUseS/&gt;&#xd;
        &lt;MoveDate/&gt;&#xd;
        &lt;MoveAddress/&gt;&#xd;
        &lt;Validfromdate/&gt;&#xd;
        &lt;Validtodate/&gt;&#xd;
        &lt;MoveAddrGuid/&gt;&#xd;
        &lt;CityNo/&gt;&#xd;
        &lt;DistrctNo/&gt;&#xd;
        &lt;Chckstatus/&gt;&#xd;
        &lt;PboxcitNo/&gt;&#xd;
        &lt;StreetNo/&gt;&#xd;
        &lt;Homecityno/&gt;&#xd;
      &lt;/IBillingAddress&gt;&#xd;
      &lt;IBillingEmail&gt;srimalladidev@usgbc.org&lt;/IBillingEmail&gt;&#xd;
      &lt;ICreditCardInfo/&gt;&#xd;
      &lt;IExpeditedRvwFlag/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;leedbapiuser&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;leedbapiuser&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;INumCreditApproach/&gt;&#xd;
      &lt;IPartnerUserAlias&gt;leedbapiuser&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IPromoCode/&gt;&#xd;
      &lt;IReviewElementId&gt;TNC7O1PPPRL-${ProjectId}&lt;/IReviewElementId&gt;&#xd;
      &lt;IShippingAddress/&gt;&#xd;
      &lt;ISplitpayment&gt;1&lt;/ISplitpayment&gt;&#xd;
      &lt;IStandardRvwFlag&gt;X&lt;/IStandardRvwFlag&gt;&#xd;
      &lt;ITaxExempt/&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItCreditList/&gt;&#xd;
    &lt;/ns1:paymentPreInvSubmitpay&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_pmn_wse/110/z_ws_pmn_wse/z_ws_pmn_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateCir" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:createCir&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ICirreqTxt&gt;VGVzdCBFbnF1aXJ5&lt;/ICirreqTxt&gt;&#xd;
      &lt;ICreditId&gt;NCD7EA103L-1000142904&lt;/ICreditId&gt;&#xd;
      &lt;ICreditShortid&gt;EA103&lt;/ICreditShortid&gt;&#xd;
      &lt;IFlagCir/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;1000142904&lt;/IProjectId&gt;&#xd;
      &lt;IProjectName&gt;Test XHR&lt;/IProjectName&gt;&#xd;
      &lt;IRatingsystem&gt;LEED v4 BD+C: NC&lt;/IRatingsystem&gt;&#xd;
      &lt;ISoNumber&gt;${IsoNo}&lt;/ISoNumber&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:createCir&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cir_wse/110/z_ws_cir_wse/z_ws_cir_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
            <stringProp name="XPathExtractor.default">Not Found</stringProp>
            <stringProp name="XPathExtractor.refname">CirNumber</stringProp>
            <stringProp name="XPathExtractor.matchNumber">1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//ECirNumber</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-590203886">&lt;ECirNumber&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCirList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getCirList&gt;&#xd;
      &lt;EtCirList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;IClaimNumber&gt;${CirNumber}&lt;/IClaimNumber&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;1000142904&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getCirList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cir_wse/110/z_ws_cir_wse/z_ws_cir_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-389377571">Notificat</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RulingCir" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:rulingCir&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ICirNum&gt;${CirNumber}&lt;/ICirNum&gt;&#xd;
      &lt;ICirrulingTxt&gt;VGVzdCBDaVI=&lt;/ICirrulingTxt&gt;&#xd;
      &lt;IFlagCir&gt;N&lt;/IFlagCir&gt;&#xd;
      &lt;IFlagReturnRuling&gt;X&lt;/IFlagReturnRuling&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IRulingResptype&gt;Z1&lt;/IRulingResptype&gt;&#xd;
      &lt;IUserAlias&gt;cirpoc@gbci.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;4Cy71VU9RvGBiwBQVoJXWA==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:rulingCir&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_cir_wse/110/z_ws_cir_wse/z_ws_cir_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
            <stringProp name="XPathExtractor.default">Not Found</stringProp>
            <stringProp name="XPathExtractor.refname">CirNumber</stringProp>
            <stringProp name="XPathExtractor.matchNumber">1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//ECirNumber</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1203931201">&lt;EUserGuid&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectClarificationList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectClarificationList&gt;&#xd;
      &lt;EtClarificationList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;1000091563&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;cbadmtest2@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;3/2I56ENzfGjRwBQVoJXWA==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectClarificationList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1387800913">&lt;NotifiType&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetClarificationDetail" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getClarificationDetail&gt;&#xd;
      &lt;EtActivityInfoList/&gt;&#xd;
      &lt;EtClarificationList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;IClarificationNumber&gt;000400003528&lt;/IClarificationNumber&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;cbadmtest2@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;3/2I56ENzfGjRwBQVoJXWA==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getClarificationDetail&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1935209741">EtClarificationList</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ReplyProjectClarification" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:replyProjectClarification&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;IClarificationNum&gt;000400003528&lt;/IClarificationNum&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;cbadmtest2@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;3/2I56ENzfGjRwBQVoJXWA==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItText&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;Tdformat&gt;*&lt;/Tdformat&gt;&#xd;
          &lt;Tdline&gt;asdsad&lt;/Tdline&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItText&gt;&#xd;
    &lt;/ns1:replyProjectClarification&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1696195198">&lt;Tdline&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectDocumentList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectDocumentList&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtFile/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectDocumentList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-212391317">ApplicationId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SkipProjectReview" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:skipProjectReview&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;leedbapiuser&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;leedbapiuser&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;leedbapiuser&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;1000144898&lt;/IProjectId&gt;&#xd;
      &lt;IReviewId&gt;THC4O3CPFRL-1000144898&lt;/IReviewId&gt;&#xd;
      &lt;IUserAlias&gt;vamanan@gmail.com&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;4i4mz7WP9PGRTABQVrsfCQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:skipProjectReview&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeleteDocument" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:deleteDocument&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ICreditId&gt;NCD7IP102L-${ProjectId}&lt;/ICreditId&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IProjectId&gt;${ProjectId}&lt;/IProjectId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
      &lt;ItDocdelete&gt;&#xd;
        &lt;item&gt;&#xd;
          &lt;Dataelementid&gt;req_v4_upl_u&lt;/Dataelementid&gt;&#xd;
          &lt;Documenttype&gt;Z02&lt;/Documenttype&gt;&#xd;
          &lt;Documentnumber&gt;0000000010000000000139719&lt;/Documentnumber&gt;&#xd;
          &lt;Documentpart&gt;000&lt;/Documentpart&gt;&#xd;
          &lt;Documentversion&gt;00&lt;/Documentversion&gt;&#xd;
          &lt;ApplicationId&gt;E83EE2D92740E0F1A9820AE29B08431D&lt;/ApplicationId&gt;&#xd;
          &lt;FileId&gt;E83EE2D92740E2F1A9820AE29B08431D&lt;/FileId&gt;&#xd;
        &lt;/item&gt;&#xd;
      &lt;/ItDocdelete&gt;&#xd;
    &lt;/ns1:deleteDocument&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_prj_wse/110/z_ws_prj_wse/z_ws_prj_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2004278413">&lt;Dataelementid&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetBlockList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getBlockList&gt;&#xd;
      &lt;EtActiveOrArchiveList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtSaveForLaterList/&gt;&#xd;
      &lt;IArchiveFlag/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getBlockList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_vol_wse/110/z_ws_vol_wse/z_ws_vol_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-934740056">ProjName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetPortfolioList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getPortfolioList&gt;&#xd;
      &lt;EtActiveOrArchiveList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtSaveForLaterList/&gt;&#xd;
      &lt;IArchiveFlag/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getPortfolioList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_vol_wse/110/z_ws_vol_wse/z_ws_vol_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-693201774">&lt;EtActiveOrArchiveList&gt;</stringProp>
              <stringProp name="922218831">&lt;ProjPartner&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetPrototypeList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getPrototypeList&gt;&#xd;
      &lt;EtActiveOrArchiveList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtSaveForLaterList/&gt;&#xd;
      &lt;IArchiveFlag/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IPortfolioId&gt;1000136250&lt;/IPortfolioId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getPrototypeList&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_vol_wse/110/z_ws_vol_wse/z_ws_vol_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2546819">&lt;ProjadminName&gt;</stringProp>
              <stringProp name="922218831">&lt;ProjPartner&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProjectsForPrototypeOrBlock" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getProjectsForPrototypeOrBlock&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtVolumeArchiveList/&gt;&#xd;
      &lt;EtVolumeProjList/&gt;&#xd;
      &lt;EtVolumeSaveForLaterList/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IPrototypeOrBlockId&gt;1000141979&lt;/IPrototypeOrBlockId&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getProjectsForPrototypeOrBlock&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_vol_wse/110/z_ws_vol_wse/z_ws_vol_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1333923454">&lt;EtVolumeProjList&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetUserRole" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getUserRole&gt;&#xd;
      &lt;EtActivitygroups/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getUserRole&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_rvm_wse_nv/110/z_ws_rvm_wse_nv/z_ws_rvm_wse_nv</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetAliasDetails" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getAliasDetails&gt;&#xd;
      &lt;EtApDocList/&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;EtLicencedetails/&gt;&#xd;
      &lt;IAlias&gt;cbadmtest3@usgbc.org&lt;/IAlias&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getAliasDetails&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_adm_wse/110/z_ws_adm_wse/z_ws_adm_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetUserBpNumber" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;urn:sap-com:document:sap:soap:functions:mc-style&quot;&gt;&#xd;
  &lt;SOAP-ENV:Body&gt;&#xd;
    &lt;ns1:getUserBpNumber&gt;&#xd;
      &lt;EtErrorLogInfo/&gt;&#xd;
      &lt;IAlias&gt;srimalladidev@usgbc.org&lt;/IAlias&gt;&#xd;
      &lt;ILeedPartnerAlias&gt;${partner_alias}&lt;/ILeedPartnerAlias&gt;&#xd;
      &lt;ILeedPartnerPwd&gt;${partner_password}&lt;/ILeedPartnerPwd&gt;&#xd;
      &lt;IPartnerUserAlias&gt;${partner_alias}&lt;/IPartnerUserAlias&gt;&#xd;
      &lt;IUserAlias&gt;srimalladidev@usgbc.org&lt;/IUserAlias&gt;&#xd;
      &lt;IUserGuid&gt;5hkj1gne/fGjqArimwhDHQ==&lt;/IUserGuid&gt;&#xd;
      &lt;IUserPwd/&gt;&#xd;
    &lt;/ns1:getUserBpNumber&gt;&#xd;
  &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev.dispatch.usgbc.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sap/bc/srt/rfc/sap/z_ws_adm_wse/110/z_ws_adm_wse/z_ws_adm_wse</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/var/lib/jenkins/workspace/SOAPPerformance/AutomationTesting/SOAPPerformance/Reportfile/SummaryReport.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
